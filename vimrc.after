"set guifont=Inconsolata-dz\ for\ Powerline:h16
"set guifont=Monaco:h16
"set guifont=Mensch\ Regular\ for\ Powerline:h16
"set guifont=Source\ Code\ Pro\ Light:h13
set guifont=Source\ Code\ Pro\ Light\ for\ Powerline:h8
let g:Powerline_symbols = 'fancy'
"let g:Powerline_symbols = 'compatible'

"set cul
set foldcolumn=2

""""""""""""""""""""""""""""""""""""""""""""" GUI
if has('gui_running')

  """"""""""" LIGHT THEMES
  "set background=dark

  "colorscheme Tomorrow
  "colorscheme buttercream
  "colorscheme delek
  "colorscheme default
  "colorscheme solarized

  "let g:indent_guides_auto_colors = 0
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=gray96
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=gray94

  """"""""""" DARK THEMES
  set background=dark

  "colorscheme Tomorrow-Night
  "colorscheme Tomorrow-Night-Bright
  "colorscheme solarized
  colorscheme vividchalk

  "colorscheme darkblue
  "let g:indent_guides_auto_colors = 0
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=CornflowerBlue
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=SlateBlue

  "let g:indent_guides_auto_colors = 0
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=gray10
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=gray15


""""""""""""""""""""""""""""""""""""""""""""" TERMINAL
else
  """"""""""" LIGHT THEMES
  "set background=light

  "colorscheme delek
  "colorscheme solarized

  "let g:indent_guides_auto_colors = 0
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=gray96
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=gray94

  """"""""""" DARK THEMES
  set background=dark

  "colorscheme Tomorrow-Night-Bright
  "colorscheme solarized
  colorscheme vividchalk

  "let g:indent_guides_auto_colors = 0
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=233
  "autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=234
end

function! g:ToggleNuNode()
  if &nu == 1
    set rnu
  else
    set nu
  endif
endfunction
nnoremap <localleader>l :call g:ToggleNuNode()<CR>

nnoremap ` :Switch<cr>

let g:nerdtree_tabs_open_on_gui_startup = 0
let g:NERDTreeQuitOnOpen = 1

inoremap kj <esc>l

map ,S :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

set modeline
